name: Build and Publish

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]


env:
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  # define job to build and publish docker image
  build-and-push-docker-image:
    name: Build Docker image and push to repositories
    # run only when code is compiling and tests are passing
    runs-on: ubuntu-latest

    # steps to perform in job
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # setup Docker buld action
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USR }}
          password: ${{ secrets.DOCKER_HUB_PW }}

      - name: Login to Github Packages
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.GH_USR }}
          password: ${{ secrets.GH_PW }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: docker.io/${{ env.IMAGE_NAME }}

      - name: Build image and push to Docker Hub and GitHub Container Registry
        uses: docker/build-push-action@v2
        with:
          # relative path to the place where source code with Dockerfile is located
          context: .
          # Note: tags has to be all lower-case
          tags: |
            anarion/releasebell:$(date +%s)latest
            anarion/releasebell:latest
            ghcr.io/anarion80/releasebell:$(date +%s)latest
            ghcr.io/anarion80/releasebell:latest
          # build on feature branches, push only on main branch
          push: ${{ github.ref == 'refs/heads/main' }}
          #push: ${{ github.event_name != 'pull_request' }}
          #tags: ${{ steps.meta.outputs.tags }}
          #labels: ${{ steps.meta.outputs.labels }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}